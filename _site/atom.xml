<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Sidey</title>
 <link href="http://localhost:4000/atom.xml" rel="self"/>
 <link href="http://localhost:4000/"/>
 <updated>2020-03-27T03:11:58-05:00</updated>
 <id>http://localhost:4000</id>
 <author>
   <name></name>
   <email></email>
 </author>

 
 <entry>
   <title>The Beauty of Jekyll</title>
   <link href="http://localhost:4000/2020/03/27/the-beauty-of-jekyll"/>
   <updated>2020-03-27T00:00:00-05:00</updated>
   <id>http://localhost:4000/2020/03/27/the-beauty-of-jekyll</id>
   <content type="html">&lt;p&gt;Picture the following.&lt;/p&gt;

&lt;p&gt;I boot up &lt;a href=&quot;https://atom.io/&quot;&gt;Atom&lt;/a&gt; to begin writing a blog post. I make a new Markdown file, hammer out a couple of paragraphs. My writing concluded, hit &lt;code&gt;Ctrl+S&lt;/code&gt; on that bad boy.&lt;/p&gt;

&lt;p&gt;Do I leave the fiddling and futzing to take my slightly nerdy &lt;code&gt;.md&lt;/code&gt; file and convert it into Wordpress or whatever for another day, and just head to sleep? If I were working with that kind of process, probably; I‚Äôm a bit of a lazybones.&lt;/p&gt;

&lt;p&gt;But I‚Äôm not working with that process. In fact, I do something very different ‚Äì something beautifully simple, ingrained into me from years and years of good programmer practices.&lt;/p&gt;

&lt;p&gt;You see, first off, this &lt;code&gt;.md&lt;/code&gt; file is actually saved inside of a git repo ‚Äì but, okay, that‚Äôs not &lt;em&gt;that&lt;/em&gt; unusual. Plenty of written materials exist on GitHub, even if we almost never actually have to bust out its more &lt;a href=&quot;https://atom.io/&quot;&gt;DerAnG&lt;/a&gt;ed history-bending features on them.&lt;/p&gt;

&lt;p&gt;Atom happens to be built &lt;em&gt;by&lt;/em&gt; GitHub, so I hit &lt;code&gt;Ctrl+Shift+9&lt;/code&gt; to bring up the tiny little panel where I can &lt;code&gt;Stage All Changes&lt;/code&gt;, then hit &lt;code&gt;Ctrl+Enter&lt;/code&gt; to &lt;code&gt;Commit Staged Changes&lt;/code&gt; (with a cheeky &lt;code&gt;commit&lt;/code&gt; comment), and finally hit &lt;code&gt;Ctrl+Enter&lt;/code&gt;,&lt;code&gt;Alt+G P&lt;/code&gt; to commit and push changes to the repo. Up the pipeline it goes, to GitHub.&lt;/p&gt;

&lt;p&gt;But there‚Äôs something‚Ä¶ &lt;em&gt;Odd&lt;/em&gt; about this GitHub repo.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/3-27-2020-odd-repo.jpg&quot; alt=&quot;Why are there so many other files in here besides the `.md` one we were just editing?&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Why are there so many other files in here besides the &lt;code&gt;.md&lt;/code&gt; one we were just editing?&lt;/p&gt;

&lt;p&gt;It turns out that all of those &lt;code&gt;.html&lt;/code&gt; files and their ilk are what the static site generator &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;&lt;strong&gt;Jekyll&lt;/strong&gt;&lt;/a&gt; uses to work its magic.&lt;/p&gt;

&lt;h2 id=&quot;jekyll-a-dream-come-true&quot;&gt;Jekyll: A dream come true&lt;/h2&gt;

&lt;p&gt;Jekyll is the kind of software I &lt;em&gt;dreamed&lt;/em&gt; about when I was just starting out in my coding journey, over a decade ago.&lt;/p&gt;

&lt;p&gt;Everyone who wants to put stuff on the web starts out by learning a bit of HTML and CSS. Maybe JS if they‚Äôre hardcore. Most people very, very quickly realize there is &lt;em&gt;far&lt;/em&gt; too much HTML, CSS, and JS in any webpage of real complexity to actually dig in and understand most of it. At best our hand-authoring is used for the occasional, manual, spot check; we leave actually generating the stuff to behemoths like Wordpress and other content management systems.&lt;/p&gt;

&lt;p&gt;This always bugged me growing up. I correctly felt like this was &lt;em&gt;too much power being taken away&lt;/em&gt; from me. Having grown up &lt;a href=&quot;http://catb.org/~esr/writings/taoup/&quot;&gt;reading my history&lt;/a&gt; I knew that this wasn‚Äôt the way the old hackers would have wanted things to be either.&lt;/p&gt;

&lt;p&gt;Besides, most of my favorite websites were (are) blogs. I don‚Äôt really need, or even want, all that complicated analytics and stuff going on behind my back most of the time.&lt;/p&gt;

&lt;p&gt;Why couldn‚Äôt there just be a computer program where I could feed it in some plain text files, maybe lightly marked up, and have it spit out a decently functional ‚Äì but simple! ‚Äì website? Where I wouldn‚Äôt be constrained to tossing my writing into some obscure CMS binary blog?&lt;/p&gt;

&lt;p&gt;That‚Äôs exactly what Jekyll is.&lt;/p&gt;

&lt;p&gt;Jekyll, at its core, gives you a simple promise, after you get it set up (which my experience suggests takes about an afternoon, unless you really want to dive in deep and make something unique ‚Äì which you can!). You focus on writing the &lt;code&gt;.md&lt;/code&gt; files. Let &lt;em&gt;me&lt;/em&gt; handle actually generating a site for you.&lt;/p&gt;

&lt;p&gt;And once I‚Äôm done, there‚Äôll be a nice little &lt;code&gt;_site&lt;/code&gt; folder sitting right there, filled with &lt;code&gt;.html&lt;/code&gt; files that you can open up and peruse in the leisure of your own web browser, locally, just like that first time you authored a webpage by hand. (Except they‚Äôll probably look much, much nicer. üòâ)&lt;/p&gt;

&lt;p&gt;A match made in heaven, right?&lt;/p&gt;

&lt;p&gt;Almost.&lt;/p&gt;

&lt;h1 id=&quot;netlify-continuous-integration-for-blogs&quot;&gt;Netlify: Continuous integration for blogs&lt;/h1&gt;

&lt;p&gt;‚ÄúContinuous integration‚Äù and ‚Äúcontinuous deployment‚Äù are basically fancy programmer speak for, ‚ÄúI want you to do certain things &lt;em&gt;every&lt;/em&gt; time I push a new commit to our GitHub branch‚Äù.&lt;/p&gt;

&lt;p&gt;Although I‚Äôm no pro, usually, I think of the excellent &lt;a href=&quot;https://travis-ci.org/&quot;&gt;Travis CI&lt;/a&gt; service when it comes to that stuff, which basically runs suites upon suites upon suites of software tests on your code-base every time you push up to the ‚Äòhub. Naturally this requires automatically running the code you want tested in some regard, right? So it‚Äôs almost like an IFTTT trigger ‚Äì ‚ÄúNew code? Okay, recompile and run all the tests again‚Äù. Fantastic stuff.&lt;/p&gt;

&lt;p&gt;But wait a minute. Blogs don‚Äôt &lt;em&gt;have&lt;/em&gt; tests they need to pass. They‚Äôre literally just words. Why might this be useful? Well, suppose you have a bunch of &lt;code&gt;.md&lt;/code&gt; files, and you can generate a really spiffy site with them just by running &lt;code&gt;jekyll build&lt;/code&gt; in their parent directory‚Ä¶&lt;/p&gt;

&lt;p&gt;And that‚Äôs exactly what &lt;a href=&quot;http://netlify.com/&quot;&gt;Netlify&lt;/a&gt; does. &lt;strong&gt;For free.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you set it up correctly (and this is considerably easy, much easier than Jekyll‚Äôs setup in fact), then &lt;em&gt;every&lt;/em&gt; time you push up new content to the GitHub repo where you‚Äôre storing your &lt;code&gt;.md&lt;/code&gt; blog posts, and maybe some images and stuff too, Netlify will kick into gear, generate a brand new &lt;code&gt;_site&lt;/code&gt; on their end, and then &lt;strong&gt;host it for you&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;This is &lt;em&gt;genius&lt;/em&gt;, because those &lt;code&gt;_site&lt;/code&gt;s are, well, static! There‚Äôs very little overhead to just hosting a bunch of &lt;code&gt;.html&lt;/code&gt;, &lt;code&gt;.css&lt;/code&gt; and &lt;code&gt;.js&lt;/code&gt; files. Static sites by definition don‚Äôt do anything crazy server-side; any nice little effects are going to happen client-side, and that‚Äôs that.&lt;/p&gt;

&lt;p&gt;Oh, and if you happen to have a domain lying around on a place like &lt;a href=&quot;hover.com/&quot;&gt;Hover&lt;/a&gt;, all it takes to link that domain to the new static site is changing the nameservers.&lt;/p&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;I have a blogging workflow now that brings so much &lt;em&gt;joy&lt;/em&gt; to my heart.&lt;/p&gt;

&lt;p&gt;All of my posts are stored and written in plain text, just like back in the days of yore where I used to use &lt;code&gt;org-mode&lt;/code&gt; to generate these kinds of things.&lt;/p&gt;

&lt;p&gt;Yet when I push up to the ‚Äòhub, &lt;em&gt;wizards halfway across the globe&lt;/em&gt; use Jekyll to render my little stack of plain text doohickeys into something‚Ä¶ just‚Ä¶ gorgeous. Absolutely stunning.&lt;/p&gt;

&lt;p&gt;I won‚Äôt say it‚Äôs &lt;em&gt;all&lt;/em&gt; good yet; I still need to figure out how to get MathJax working. But the combination of Jekyll + GitHub + Netlify + Hover for Nonstandard Deviations mgiht be my favorite Internet thing of the entire year.&lt;/p&gt;
</content>
 </entry>
 

</feed>
